//
//  HomeInteractor.swift
//  TestiOS
//
//  Created by javier apaez on 29/07/22.
//  Copyright (c) 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol HomeBusinessLogic {
    func showCharts(request: Home.Charts.Request)
    func addDatabaseObserver(request: Home.Charts.Request)
    func retriveSelfie(request: Home.RetriveSelfie.Request)
    func uploadSelfie(request: Home.UploadSelfie.Request)
}

protocol HomeDataStore {
    //var name: String { get set }
}

class HomeInteractor: HomeBusinessLogic, HomeDataStore {
    var presenter: HomePresentationLogic?
    var worker: HomeWorker?
    //var name: String = ""

    // MARK: Do something (and send response to HomePresenter)

    func showCharts(request: Home.Charts.Request) {
        let response = Home.Charts.Response()
        presenter?.presentCharts(response: response)
    }
    
    func addDatabaseObserver(request: Home.Charts.Request) {
        worker = HomeWorker()
        worker?.colorWorker(completionHanlder: { backgroundColor in
            let response = Home.BackgroundColor.Response(hexColor: backgroundColor)
            self.presenter?.presentNewBakcgroundColor(response: response)
        })
    }
    
    func retriveSelfie(request: Home.RetriveSelfie.Request) {
        worker = HomeWorker()
        worker?.retriveSelfie(with: request.name, completionHandler: { uiimage in
            let response = Home.RetriveSelfie.Response(selfieImage: uiimage)
            self.presenter?.presentSelfie(response: response)
        })
    }
    
    func uploadSelfie(request: Home.UploadSelfie.Request) {
        worker = HomeWorker()
        worker?.uploadSelfie(withUIImage: request.selfieImage, andName: request.name, completionHandler: {
            let response = Home.UploadSelfie.Response()
            self.presenter?.presentUploadSelfie(response: response)
        })
    }
}
